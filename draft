unc formatTwoPairs(card []card.Card) {
	var m = make(map[int]string)
	var y = make(map[string]int)
	var cmbntn = []string{}

	for i := 0; i < len(card); i++ {
		m[i] = card[i].Suit
	}
	sortedArr := []string{}
	for i := 0; i < len(m); i++ {
		sortedArr = append(sortedArr, m[i])
	}

	sort.Strings(sortedArr)

	for i := 1; i < len(sortedArr); i++ {

		if sortedArr[i-1] == sortedArr[i] {
			cmbntn = append(cmbntn, sortedArr[i-1])
			cmbntn = append(cmbntn, sortedArr[i])
			break
		}
	}
	for i := 1; i < len(m); i++ {
		if m[i] != m[i-1] && cmbntn[0] != m[i-1] {
			cmbntn = append(cmbntn, m[i-1])
			if len(cmbntn) == 5 {
				break
			}
		}
	}
	for i := 0; i < len(cmbntn); i++ {
		y[cmbntn[i]] = i
	}
	if len(y) == 3 {
		fmt.Println(cmbntn)
	}

}

func formatPair(card []card.Card) {

	var m = make(map[int]string)
	var y = make(map[string]int)
	var cmbntn = []string{}

	for i := 0; i < len(card); i++ {
		m[i] = card[i].Suit
		y[card[i].Suit] = i
	}
	sortedArr := []string{}
	for i := 0; i < len(m); i++ {
		sortedArr = append(sortedArr, m[i])
	}

	sort.Strings(sortedArr)

	for i := 1; i < len(sortedArr); i++ {

		if sortedArr[i-1] == sortedArr[i] {
			cmbntn = append(cmbntn, sortedArr[i-1])
			cmbntn = append(cmbntn, sortedArr[i])
			break
		}
	}

	for key := range y {
		if cmbntn[0] != key {
			cmbntn = append(cmbntn, key)
		}
	}

	if len(cmbntn) == 5 {
		rand.Seed(time.Now().UnixNano())
		rand.Shuffle(len(cmbntn), func(i, j int) { cmbntn[i], cmbntn[j] = cmbntn[j], cmbntn[i] })
		fmt.Println(cmbntn)
	}

}